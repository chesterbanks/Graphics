// Inspired by: https://codepen.io/schmidtsonian/pen/pbvEZg

var tree = 0;
var pictureTint = {r: 199, g: 224, b: 232, a: 150};
var trunk = {r: 199, g: 224, b: 232, a: 50};
var sky = {r: 159, g: 224, b: 252};

var Snow = function(){
    this.x = random(width);
    this.y = -30;
    this.sz = random(6);
    this.r = random(360);
    
    this.fade = false;
    this.trans = 255;
};
Snow.prototype.draw = function() {
    if(tree === 0 || tree === 1){
        this.fade = true;
    }
    
    noStroke();
    fill(255, 255, 255, this.trans);
    pushMatrix();
    translate(this.x, this.y);
    scale(this.sz);
    rotate(this.r);
    triangle(0, 1, 1, -1, -1, -1);
    popMatrix();
    
    this.y += this.sz;
    this.r += this.sz;
    if(this.fade){
        this.trans /= 1.1;
    }
};
var Snows = [];

draw = function() {
    // background
    background(sky.r, sky.g, sky.b);
    
    for(var i = Snows.length - 1; i >= 0; i --){
        Snows[i].draw();
        if(Snows[i].y > 400 || Snows[i].trans < 5){
            Snows.splice(i, 1);
        }
    }
    
    stroke(255, 255, 255, 20);
    noFill();
    for(var i = 60; i > 0; i -= 5){
        strokeWeight(i);
        //rect(0, 0, width, height);
        
        triangle(-100, 400, 500, 400, 160, 330);
        triangle(-100, 400, 687, 400, 70, 330);
        triangle(-100, 400, 500, 400, 335, 330);
    }
    noStroke();
    fill(255, 255, 255, 10);
    for(var i = 0; i < 339; i += 5){
        ellipse(182, 200, i, i);
    }
    
    // ground
    noStroke();
    fill(199, 224, 232);
    triangle(-100, 400, 500, 400, 70, 330);
    triangle(-100, 400, 691, 400, 330, 330);
    fill(pictureTint.r + 50, pictureTint.g + 50, pictureTint.b + 100);
    triangle(-108, 400, 710, 400, 161, 330);
    fill(255, 255, 255, 50);
    triangle(90, 348, 727, 400, 161, 330);
    
    /* Tree */
    pushMatrix();
    translate(202, 183);
    noStroke();
    // left back chunk
    fill(220, 231, 232);
    triangle(-165, 1, -51, 41, -48, -47);
    fill(95, 117, 120);
    triangle(-165, 1, -51, 39, -102, 65);
    fill(181, 197, 199);
    triangle(-113, 84, -51, 39, -102, 65);
    triangle(-113, 84, -51, 39, -33, 57);
    fill(147, 170, 173);
    triangle(-113, 84, -53, 99, -36, 57);
    fill(108, 130, 133);
    triangle(-5, 53, -53, 99, -36, 57);
    
    // right back chunk
    fill(220, 231, 232);
    triangle(-22, 1, 89, -64, 34, -47);
    fill(114, 145, 148);
    triangle(-22, 1, 89, -64, 71, 14);
    
    // second chunk
    fill(195, 218, 219);
    triangle(26, -1, 19, -115, 61, -16);
    fill(114, 145, 148);
    triangle(-22, 54, 4, 92, 24, 14);
    fill(175, 196, 199);
    triangle(0, -27, 105, -13, 11, 63);
    triangle(78, 75, 81, 26, 12, 63);
    fill(128, 159, 163);
    triangle(80, 33, 105, -13, 11, 63);
    triangle(78, 75, 54, 100, 12, 63);
    fill(185, 199, 201);
    triangle(2, 92, 54, 100, 12, 63);
    
    // front chunk
    fill(206, 217, 219);
    triangle(0, 0, -106, -66, 20, -117);
    fill(167, 182, 184);
    triangle(0, 0, 40, -18, 20, -117);
    triangle(0, -1, 40, -19, 34, 26);
    fill(95, 125, 130);
    triangle(0, 0, -106, -66, -66, -13);
    fill(175, 196, 199);
    triangle(0, 0, -104, 38, -66, -14);
    fill(101, 127, 130);
    triangle(-1, 43, -104, 37, -40, 65);
    fill(128, 155, 158);
    triangle(-1, 44, -104, 38, 11, 26);
    fill(128, 155, 158);
    triangle(1, -1, -104, 38, 34, 26);
    
    // tree tint
    fill(pictureTint.r, pictureTint.g, pictureTint.b, pictureTint.a);
    beginShape();
    vertex(-106, -65);
    vertex(20, -117);
    vertex(47, -50);
    vertex(90, -64);
    vertex(79, -17);
    vertex(106, -13);
    vertex(81, 33);
    vertex(79, 75);
    vertex(54, 100);
    vertex(4, 92);
    vertex(-20, 59);
    vertex(-53, 98);
    vertex(-113, 84);
    vertex(-104, 64);
    vertex(-166, 1);
    vertex(-80, -33);
    endShape();
    
    // trunk
    fill(127, 138, 145);
    triangle(-20, 20, -40, 160, 0, 160);
    fill(102, 114, 122);
    triangle(-20, 14, -40, 160, -27, 160);
    triangle(-30, 125, -47, 160, -27, 160);
    fill(121, 131, 138);
    triangle(-20, 27, -12, 160, 0, 160);
    triangle(28, 82, -12, 99, -9, 118);
    triangle(-50, 64, -28, 75, -29, 69);
    fill(86, 94, 99);
    triangle(28, 82, -12, 106, -9, 118);
    triangle(-50, 64, -28, 75, -29, 89);
    
    fill(trunk.r, trunk.g, trunk.b, trunk.a);
    beginShape();
    vertex(-20, 16);
    vertex(-9, 98);
    vertex(27, 82);
    vertex(-6, 117);
    vertex(0, 160);
    vertex(-47, 160);
    vertex(-38, 140);
    vertex(-30, 90);
    vertex(-49, 65);
    vertex(-28, 70);
    endShape();
    
    popMatrix();
    
    // I prefer if statements over switch statements. I haven't seen much of a difference in performance and I find if statements more convenient.
    if(tree === 0){
        pictureTint.r += (50 - pictureTint.r) / 30;
        pictureTint.g += (160 - pictureTint.g) / 30;
        pictureTint.b += (10 - pictureTint.b) / 30;
        pictureTint.a += (150 - pictureTint.a) / 50;
        
        sky.r += (160 - sky.r) / 10;
        sky.g += (224 - sky.g) / 10;
        sky.b += (252 - sky.b) / 10;
    } else if (tree === 1){
        pictureTint.r += (250 - pictureTint.r) / 30;
        pictureTint.g += (160 - pictureTint.g) / 30;
        pictureTint.b += (10 - pictureTint.b) / 30;
        pictureTint.a += (150 - pictureTint.a) / 50;
        
        sky.r += (250 - sky.r) / 10;
        sky.g += (224 - sky.g) / 10;
        sky.b += (212 - sky.b) / 10;
        
        strokeCap(SQUARE);
        noFill();
        stroke(222, 161, 104);
        strokeWeight(5);
        pushMatrix();
        translate(405, 200);
        line(-40, -30, -50, 30);
        line(-40, -30, -25, 30);
        line(-40, -22, -28, 30);
        line(-45, 10, -31, 10);
        
        line(-18, -30, -18, 15);
        line(-16, -30, -14, 27);
        line(0, -30, 0, 15);
        bezier(-18, 15, -18, 30, -4, 38, 0, 15);
        
        line(15, -27, 17, 30);
        line(18, -27, 17, 30);
        line(6, -27, 29, -27);
        
        line(54, -30, 54, 15);
        line(35, -30, 34, 15);
        line(38, -30, 36, 23);
        bezier(54, 15, 55, 30, 36, 38, 34, 15);
        
        line(63, -30, 62, 30);
        line(65, -30, 65, 30);
        line(65, -30, 76, 19);
        line(88, -30, 77, 19);
        line(88, -30, 75, 11);
        line(88, -30, 88, 30);
        
        line(98, -30, 98, 30);
        line(118, -30, 118, 30);
        line(98, -21, 118, 30);
        line(98, -29, 118, 18);
        
        popMatrix();
    } else if (tree === 2){
        Snows.push(new Snow());
        
        pictureTint.r += (210 - pictureTint.r) / 30;
        pictureTint.g += (250 - pictureTint.g) / 30;
        pictureTint.b += (250 - pictureTint.b) / 30;
        pictureTint.a += (0 - pictureTint.a) / 50;
        trunk.a += (0 - pictureTint.a) / 10;
        
        sky.r += (230 - sky.r) / 10;
        sky.g += (234 - sky.g) / 10;
        sky.b += (252 - sky.b) / 10;
        
        strokeCap(SQUARE);
        noFill();
        stroke(151, 184, 207);
        strokeWeight(5);
        pushMatrix();
        translate(440, 200);
        
        line(-81, -30, -70, 30);
        line(-78, -30, -70, 30);
        line(-63, -14, -70, 30);
        line(-62, -14, -51, 30);
        line(-62, -14, -55, 30);
        line(-46, -30, -52, 30);
        
        line(-34, -30, -35, 30);
        line(-37, -30, -35, 30);
        
        line(15, -27, 17, 30);
        line(18, -27, 17, 30);
        line(6, -27, 29, -27);
        
        pushMatrix();
        translate(-120, 0);
        line(98, -30, 98, 30);
        line(118, -30, 118, 30);
        line(98, -21, 118, 30);
        line(98, -29, 118, 18);
        popMatrix();
        
        line(39, -30, 36, 30);
        line(36, -30, 36, 30);
        line(36, -27, 52, -27);
        line(36, -12, 49, -12);
        line(36, 27, 52, 27);
        
        line(63, -30, 59, 30);
        line(59, -30, 59, 30);
        line(62, -28, 80, -24);
        line(77, -1, 79, -26);
        line(74, -1, 76, -26);
        line(79, -1, 63, 1);
        line(70, -1, 78, 36);
        line(67, -1, 78, 36);
        
        popMatrix();
    }
    
    if(tree === 0 || tree === 1){
        trunk.r += (250 - trunk.r) / 30;
        trunk.g += (50 - trunk.g) / 30;
        trunk.b += (20 - trunk.b) / 30;
        trunk.a += (50 - trunk.a) / 50;
    }
};

mouseClicked = function() {
    tree ++;
    if(tree > 2){ tree = 0; }
};
